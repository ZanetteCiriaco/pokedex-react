{"version":3,"sources":["services/api.js","history.js","components/PokemonCard/PokemonCard.js","assets/js/store.js","components/Search/Search.js","components/Pagination/Pagination.js","components/Loading/Loading.js","components/Header/Header.js","pages/pokedex/index.js","pages/pokemon/index.js","App.js","index.js"],"names":["api","axios","create","baseURL","createBrowserHistory","PokemonCard","props","name","useState","pokemon","setPokemon","loading","setLoading","image","setImage","imageError","setImageError","a","get","then","res","data","pokemonData","setTimeout","useEffect","getData","className","style","backgroundColor","id","types","type","onClick","history","push","split","join","map","index","src","onError","alt","page","start","end","store","getPage","setPage","p","getStart","setStart","s","getEnd","setEnd","e","Search","input","setInput","placeholder","onChange","value","showPokemons","pokemons","forEach","startsWith","search","slice","inputText","target","toLowerCase","Pagination","lastPage","Math","round","length","currentPage","setCurrentPage","background","color","pageNumber","next","prevCount","prev","Loading","Header","withBtn","Pokedex","setPokemons","setShowPokemons","response","results","load","time","window","scrollTo","Pokemon","useParams","evolution","setEvolution","isLoading","setIsloading","reload","setReload","weight","height","stats","abilities","species","hp","base_stat","attack","defense","especial_attack","especial_defense","speed","pokemonType","ability","url","getEvolution","evolution_chain","old","chain","evolves_to","element","getPokemon","width","param","App","basename","process","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a953279f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://pokeapi.co/api/v2/pokemon'\r\n});\r\n\r\nexport default api;","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory(); ","import { useEffect, useState } from 'react';\r\nimport history from '../../history';\r\nimport api from '../../services/api';\r\n\r\nimport './PokemonCard.css';\r\nimport '../../assets/css/type.css';\r\n\r\nconst PokemonCard = (props) => {\r\n\r\n    const name = props.name;\r\n    const [pokemon, setPokemon] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const[image, setImage] = useState(`http://play.pokemonshowdown.com/sprites/xyani/${name}.gif`)\r\n    const[imageError, setImageError] = useState(false)\r\n\r\n      \r\n    async function getData(){\r\n        const pokemonData = await api.get(name).then(res => res.data)   \r\n        setPokemon(pokemonData)\r\n        \r\n        setTimeout(() => {\r\n            setLoading(false)\r\n        }, 300);    \r\n    }\r\n\r\n    function redirect () {\r\n        history.push(`pokemon/${pokemon.id}`)  \r\n    }\r\n\r\n    function handleErrorImage(){\r\n        \r\n        if(!imageError){\r\n            setImage( `http://play.pokemonshowdown.com/sprites/xyani/${name.split('-')[0]}.gif`); \r\n        }\r\n\r\n        if(imageError) {\r\n            setImage( `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokemon.id}.png`);  \r\n        }\r\n\r\n        setImageError(true)\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        getData();\r\n        \r\n    }, [])\r\n\r\n  \r\n\r\n    if(loading){\r\n        return (\r\n            <div className='card' style={{backgroundColor: 'red'}}> \r\n                <div className=\"card-title\">\r\n                    <strong>Desconhecido</strong>\r\n                </div>\r\n\r\n                <div className='card-body'>\r\n                    <div className='content'></div>\r\n                    <div className='image'> </div>\r\n                    <div className='id-icon'></div>\r\n                </div>\r\n            </div>)\r\n    }\r\n\r\n    return (\r\n        <> \r\n            <div className='card' id={pokemon.types[0].type.name} onClick={redirect} > \r\n            <div className=\"card-title\">\r\n                <strong>{pokemon.name.split('-').join(' ')}</strong>\r\n            </div>\r\n\r\n            <div className=\"card-body\">\r\n                <div className=\"content\">\r\n                    {pokemon.types.map((types, index) => (\r\n                        <div className=\"type-block\" key={index}>\r\n                            {types.type.name}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <div className=\"image\">\r\n                <img src={image} onError={handleErrorImage} alt=\"\"></img>\r\n                </div>\r\n\r\n                <div className=\"id-icon\">\r\n                    #{pokemon.id}\r\n                </div>\r\n\r\n            </div>    \r\n        </div> \r\n            \r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default PokemonCard;","let page = 1;\r\nlet start = 0;\r\nlet end = 20;\r\n\r\nconst store = {\r\n    getPage: () => page,\r\n    setPage: p => { page = p },\r\n\r\n    getStart: () => start,\r\n    setStart: s => { start = s},\r\n\r\n    getEnd: () => end,\r\n    setEnd: e => { end = e}\r\n}\r\n\r\nexport default store;","import {useState} from 'react';\r\nimport './Search.css';\r\nimport store from '../../assets/js/store';\r\n\r\n\r\nconst Search = (props) => {\r\n\r\n    const [input, setInput] = useState('');\r\n    \r\n    function inputText (value) {\r\n\r\n        const showPokemons = []\r\n        setInput(value)\r\n        \r\n        if (value !== '') {\r\n            props.pokemons.forEach(pokemon => { \r\n                if(pokemon.name.startsWith(value))\r\n                    showPokemons.push(pokemon)\r\n            });\r\n    \r\n            props.search(showPokemons);\r\n        }\r\n\r\n        if (value === '' || value == null) {\r\n            props.search(props.pokemons.slice(store.getStart(), store.getEnd()))\r\n        }    \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className='search'>\r\n            <input\r\n                type='text' \r\n                placeholder='Buscar Pokémon...'\r\n                onChange={(e)=> inputText(e.target.value.toLowerCase())}\r\n                value={input}>\r\n            </input>   \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n\r\n\r\n","import { useState } from \"react\";\r\nimport store from '../../assets/js/store';\r\nimport './Pagination.css';\r\n\r\n\r\nconst Pagination = (props) => {\r\n\r\n\r\n    const lastPage = Math.round(props.length / 20);\r\n\r\n    const [currentPage, setCurrentPage] =  useState(store.getPage());\r\n    \r\n    const style = {\r\n        background: 'rgb(8, 70, 54)',\r\n        color: 'white'\r\n\r\n    }\r\n\r\n  \r\n    function pageNumber(value) {\r\n       \r\n        store.setEnd(value * 20)\r\n        store.setStart((value * 20) - 20)\r\n        setCurrentPage(value)\r\n        store.setPage(value)\r\n        props.page(store.getStart(), store.getEnd());\r\n    }\r\n\r\n\r\n    function next () {\r\n\r\n        if (currentPage < lastPage){\r\n            store.setEnd(store.getEnd() + 20)\r\n            store.setStart(store.getStart() + 20)\r\n            setCurrentPage(prevCount => prevCount + 1)\r\n            store.setPage((store.getPage() + 1))\r\n            props.page(store.getStart(), store.getEnd());\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    function prev () {\r\n\r\n        if (currentPage > 1) {\r\n            store.setEnd(store.getEnd() - 20)\r\n            store.setStart(store.getStart() - 20)\r\n            setCurrentPage(prevCount => prevCount - 1)\r\n            store.setPage((store.getPage() - 1))\r\n            props.page(store.getStart(), store.getEnd());\r\n        }\r\n    }\r\n \r\n\r\n    \r\n    return(\r\n        <div className='container'>\r\n            <ul>\r\n                {currentPage <= 1 && (\r\n                <>\r\n                    <li onClick={prev}> « </li>\r\n                    <li onClick={() => pageNumber(currentPage)} style={style}> {currentPage} </li>\r\n                    <li onClick={() => pageNumber(currentPage + 1)}> {currentPage + 1} </li>\r\n                    <li onClick={() => pageNumber(currentPage + 2)}> {currentPage + 2} </li>\r\n                    <li>...</li>\r\n                    <li onClick={() => pageNumber(lastPage)}> Última </li>\r\n                    <li onClick={next}> » </li>\r\n                </>\r\n                )}\r\n\r\n                {currentPage >= 2 && currentPage < lastPage && (\r\n                <>\r\n                    <li onClick={prev}> « </li>\r\n                    <li onClick={() => pageNumber(1)}> Primeira </li>\r\n                    {currentPage > 2 && <li onClick={() => pageNumber(currentPage - 2)}> {currentPage - 2} </li> }\r\n                    <li onClick={() => pageNumber(currentPage - 1)}> {currentPage - 1} </li>\r\n                    <li onClick={() => pageNumber(currentPage)} style={style}> {currentPage} </li>\r\n                    <li onClick={() => pageNumber(currentPage + 1)}> {currentPage + 1} </li>\r\n                    { currentPage < lastPage - 1 && <li onClick={() => pageNumber(currentPage + 2)}> {currentPage + 2} </li>}\r\n                    <li onClick={() => pageNumber(lastPage)}> Última </li>\r\n                    <li onClick={next}> » </li>  \r\n                </>\r\n                )}\r\n\r\n                {currentPage >= lastPage && (\r\n                <>\r\n                    <li onClick={prev}> « </li>\r\n                    <li onClick={() => pageNumber(1)}> Primeira </li>\r\n                    <li> ... </li>\r\n                    <li onClick={() => pageNumber(currentPage - 2)}> {currentPage - 2} </li>\r\n                    <li onClick={() => pageNumber(currentPage - 1)}> {currentPage - 1} </li>\r\n                    <li onClick={() => pageNumber(currentPage)} style={style}> {currentPage} </li>\r\n                    <li onClick={next}> » </li> \r\n                </>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;\r\n","import './Loading.css';\r\n\r\nconst Loading = () => {\r\n\r\n    return(\r\n        <div className=\"loading\"></div>\r\n    )\r\n}\r\n\r\nexport default Loading;","import history  from '../../history';\r\nimport './Header.css'\r\n\r\nconst Header = (props) => {\r\n\r\n    const withBtn =  props.withBtn;\r\n    \r\n    function redirect () {\r\n        history.push('/');\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='header'>\r\n            {withBtn ? (\r\n                <>\r\n                    <button onClick={redirect}></button>\r\n                    <h1> {props.name}</h1>\r\n                    <div className='icon'></div>\r\n                </>\r\n            ): (\r\n                <>\r\n                    <h1> {props.name}</h1>\r\n                    <div className='icon'></div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","\r\nimport React, { useEffect, useState } from 'react';\r\nimport api from '../../services/api';\r\nimport PokemonCard from '../../components/PokemonCard/PokemonCard';\r\nimport Search  from '../../components/Search/Search';\r\nimport Pagination from '../../components/Pagination/Pagination';\r\nimport Loading from '../../components/Loading/Loading';\r\nimport store from '../../assets/js/store';\r\nimport Header from '../../components/Header/Header';\r\n\r\nimport './index.css';\r\n\r\n\r\n\r\nconst Pokedex = () => {\r\n\r\n\r\n    const [pokemons, setPokemons] = useState([])\r\n    const [showPokemons, setShowPokemons] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [start, setStart] = useState(store.getStart())\r\n    const [end, setEnd] = useState(store.getEnd())\r\n\r\n\r\n    \r\n   async function getData() {\r\n       const pokemonData =  await api.get('?limit=898').then(response => response.data.results);\r\n       setPokemons(pokemonData); \r\n       setShowPokemons(pokemonData.slice(start, end))\r\n   }\r\n\r\n\r\n   function page(start, end) {\r\n        setStart(start)\r\n        setEnd(end);  \r\n        setShowPokemons(pokemons.slice(start, end))\r\n        load(1000)\r\n   }\r\n\r\n   function search(data){\r\n        setShowPokemons(data)\r\n        load(1000);\r\n   }\r\n\r\n\r\n   function load(time) {\r\n       setLoading(false)\r\n       window.scrollTo(0, 120)\r\n\r\n       setTimeout(() => {\r\n           setLoading(true)\r\n       }, time);\r\n   }\r\n\r\n\r\n    useEffect(() => {\r\n        getData(); \r\n\r\n    }, [])\r\n   \r\n\r\n\r\n    return(  \r\n\r\n        <>\r\n            <Header name ='Pokédex'/>\r\n            <div className='logo'></div>\r\n            <Search search={search} pokemons={pokemons} />\r\n            <Pagination length={pokemons.length} page={page}/>\r\n\r\n            {loading ? (\r\n                <div className='grid'>\r\n                    {showPokemons.map((pokemon, index) => {\r\n                    return(\r\n                        <div className='row' key={index}>\r\n                            <PokemonCard name={pokemon.name} /> \r\n                        </div>    \r\n                        )\r\n                    })}\r\n                </div> \r\n            ) : (\r\n                <Loading />     \r\n            )}                \r\n        </>\r\n       \r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Pokedex;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport history from '../../history';\r\nimport api from '../../services/api';\r\nimport Header from '../../components/Header/Header'\r\n\r\nimport './index.css';\r\nimport '../../assets/css/type.css';\r\n\r\n\r\n\r\n\r\nconst Pokemon = () => {\r\n    const { name } = useParams();\r\n    const [pokemon, setPokemon] = useState([])\r\n    const [evolution, setEvolution] = useState([])\r\n    const [isLoading, setIsloading] = useState(true)\r\n    const [reload, setReload] = useState('')\r\n   \r\n\r\n   async function getPokemon() {\r\n        await api.get(`/${name}`).then(pokemon => {\r\n            \r\n            const {\r\n                id,\r\n                name,\r\n                weight,\r\n                height,\r\n                stats,\r\n                types,\r\n                abilities,\r\n                species\r\n                \r\n              } = pokemon.data;\r\n\r\n              setPokemon({\r\n                id,\r\n                name,\r\n                weight: weight / 10 + 'kg',\r\n                height: height / 10 + 'm',\r\n                stats: {\r\n                   hp: stats[0].base_stat,\r\n                   attack: stats[1].base_stat,\r\n                   defense: stats[2].base_stat,\r\n                   especial_attack: stats[3].base_stat,\r\n                   especial_defense: stats[4].base_stat,\r\n                   speed: stats[5].base_stat,\r\n                },\r\n\r\n                type: types.map((pokemonType) => ([\r\n                    pokemonType.type.name\r\n                ])),\r\n\r\n                abilities: abilities.map(ability => ([\r\n                    ability.ability.name.split('-').join(' ')\r\n                ])),\r\n                species: {\r\n                    name: species.name,\r\n                    url: species.url\r\n                }\r\n\r\n              })\r\n              \r\n\r\n              setTimeout(() => {\r\n                  setIsloading(false)\r\n              }, 200);    \r\n\r\n              getEvolution(species.url);\r\n        })\r\n        \r\n    }\r\n\r\n\r\n   async function getEvolution(url) {\r\n        \r\n        setEvolution([])\r\n\r\n        await axios.get(url).then(response => {\r\n                axios.get(response.data.evolution_chain.url).then(response => {\r\n                    setEvolution(old => [...old,{\r\n                        id: response.data.chain.species.url.split('/')[6],\r\n                        name: response.data.chain.species.name}\r\n                    ])\r\n\r\n                    response.data.chain.evolves_to.forEach(element => {\r\n                        setEvolution(old => [...old, {\r\n                            name : element.species.name, \r\n                            id: element.species.url.split('/')[6]}\r\n                        ])\r\n\r\n                        element.evolves_to.forEach(res => {\r\n                            setEvolution(old => [...old, {\r\n                                name : res.species.name, \r\n                                id: res.species.url.split('/')[6]}\r\n                            ])\r\n\r\n                        })\r\n                    });\r\n                })  \r\n            }) \r\n    }\r\n\r\n\r\n    function redirect (param) {\r\n        history.push(`/pokemon/${param}`)\r\n        \r\n        setReload(param)\r\n        \r\n        setIsloading(true);\r\n        setTimeout(() => {\r\n            setIsloading(false)\r\n        }, 200); \r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getPokemon();\r\n        window.scrollTo(0, 0);\r\n    }, [reload])\r\n\r\n\r\n\r\n    if(isLoading){\r\n        return(<Header withBtn = {true} name ='Detalhes'/>)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Header withBtn = {true} name ='Detalhes'/>\r\n            \r\n            <div className=\"body\">\r\n                <div className=\"pokemon-block\">\r\n                    <div className=\"pokemon-name\">\r\n                        <h1>{pokemon.name.split('-').join(' ')}</h1>\r\n                    </div>\r\n                    \r\n                    <div className=\"pokemon-left-side-stats\"> \r\n                        <div className=\"lines-info\">\r\n                            <strong> ID </strong>\r\n                            <div className='lines-info-value'> {pokemon.id}</div>\r\n                        </div>\r\n\r\n                        <div className=\"lines-info\">\r\n                            <strong> Peso </strong>\r\n                            <div className='lines-info-value'> {pokemon.weight} </div>\r\n                        </div>\r\n\r\n                        <div className=\"lines-info\">\r\n                            <strong> Altura </strong>\r\n                            <div className='lines-info-value'> {pokemon.height}</div>\r\n                        </div>\r\n\r\n                        <div className=\"lines-info\">\r\n                            <strong> Espécie </strong>\r\n                            <div className='lines-info-value'> {pokemon.species.name}</div>\r\n                        </div>\r\n\r\n                        <div className=\"lines-info\">\r\n                            <strong> Tipo </strong>\r\n                            <div className='value-container'>\r\n                            {pokemon.type.map((type, index) => {\r\n                                return(\r\n                                    <div id={type} className='lines-info-value' key={index}> {type}</div>\r\n                                )\r\n                            })} \r\n                            </div>  \r\n                        </div>\r\n\r\n                        <div className=\"lines-info\">\r\n                            <strong> Habilidades </strong>\r\n                            <div className='value-container'> \r\n                            {pokemon.abilities.map((ability, index) => {\r\n                                return(\r\n                                    <div className='lines-info-value' key={index}> {ability}</div>\r\n                                )\r\n                            })} \r\n                            </div>  \r\n                        </div>   \r\n                    </div>\r\n\r\n                    <div className=\"pokemon-image\">\r\n                        <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${name}.png`} alt='' loading='lazy'></img>\r\n                    </div> \r\n\r\n                    <div className=\"pokemon-right-side-stats\">\r\n                        <div className=\"lines\">\r\n                            <div className=\"text\">\r\n                                <strong>\r\n                                <span>HP</span>\r\n                                </strong>\r\n                            </div>\r\n\r\n                            <div className=\"stats-bar\"> \r\n                                <div className=\"progress-bar\" id=\"hp\" style={{backgroundColor: 'green', width: `${pokemon.stats.hp / 2}%`}}>\r\n                                    <span>{pokemon.stats.hp}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"lines\">\r\n                            <div className=\"text\">\r\n                                <strong>\r\n                                    <span>ATK</span>\r\n                                </strong>\r\n                            </div>\r\n                        \r\n                            <div className=\"stats-bar\">\r\n                                <div className=\"progress-bar\" style={{backgroundColor: 'red',  width: `${pokemon.stats.attack / 2}%`}}>\r\n                                    <span>{pokemon.stats.attack}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"lines\">\r\n                            <div className=\"text\">\r\n                                <strong>\r\n                                    <span>DEF</span>\r\n                                </strong>\r\n                            </div>\r\n                        \r\n                            <div className=\"stats-bar\">\r\n                                <div className=\"progress-bar\" style={{backgroundColor: 'blue',  width: `${pokemon.stats.defense / 2}%`}}>\r\n                                    <span>{pokemon.stats.defense}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"lines\">\r\n                            <div className=\"text\">\r\n                                <strong>\r\n                                    <span>Esp.ATK</span>\r\n                                </strong>\r\n                            </div>\r\n                        \r\n                            <div className=\"stats-bar\">\r\n                                <div className=\"progress-bar\" style={{backgroundColor: 'darkred',  width: `${pokemon.stats.especial_attack / 2}%`}}>\r\n                                    <span>{pokemon.stats.especial_attack}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"lines\">\r\n                            <div className=\"text\">\r\n                                <strong>\r\n                                    <span>Esp.DEF</span>\r\n                                </strong>\r\n                            </div>\r\n                        \r\n                            <div className=\"stats-bar\">\r\n                                <div className=\"progress-bar\" style={{backgroundColor: 'darkblue',  width: `${pokemon.stats.especial_defense / 2}%`}}>\r\n                                    <span>{pokemon.stats.especial_defense}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"lines\">\r\n                            <div className=\"text\">\r\n                                <strong>\r\n                                    <span>Speed</span>\r\n                                </strong>\r\n                            </div>\r\n                        \r\n                            <div className=\"stats-bar\">\r\n                                <div className=\"progress-bar\" style={{backgroundColor: 'darkorange',  width: `${pokemon.stats.speed / 2}%`}}>\r\n                                    <span>{pokemon.stats.speed}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='evolution-container'>\r\n                    <p><strong>Cadeia de Evolução</strong></p>\r\n\r\n                    <div className='evolution-chain'> \r\n                        {evolution.map(pokemon => {\r\n                            return(\r\n                                <div className='evolution' key={pokemon.id} onClick={()=> redirect(pokemon.id)}>\r\n                                    <img src ={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokemon.id}.png`} alt=''></img><br></br>\r\n                                    <strong>{pokemon.name.split('-').join(' ')}</strong>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pokemon;\r\n\r\n// Alternative link to images //\r\n/*setImage(`https://pokeres.bastionbot.org/images/pokemon/${id}.png`)\r\nhttps://assets.pokemon.com/assets/cms2/img/pokedex/full/00${value}.png\r\n\r\n*/","import { Route, Switch } from 'react-router-dom'\r\nimport Pokedex from './pages/pokedex';\r\nimport Pokemon from './pages/pokemon';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    return(\r\n        <div>\r\n            <Switch basename={process.env.PUBLIC_URL}>\r\n                <Route exact path=\"/\" component={Pokedex} />    \r\n                <Route exact path=\"/pokemon/:name\" component={Pokemon} />  \r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Router } from 'react-router-dom'\r\n\r\nimport history from './history';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <Router history={history}>\r\n      <App />  \r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}